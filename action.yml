name: Platform setup
description: Install Freckle Platform CLI
inputs:
  version:
    description: Version of Platform CLI to install
    required: true
    default: ""
  token:
    description: GitHub Token with access to freckle/platform repository
    required: true
outputs: {}
runs:
  using: composite
  steps:
    - id: prep
      shell: bash
      run: |
        if [[ -f .platform/VERSION ]]; then
          read -r version < .platform/VERSION
        else
          version=${{ inputs.version }}
        fi

        echo "::set-output name=version::$version"

        case "${{ runner.os }}" in
          Linux)
            echo "::set-output name=suffix::x86_64-linux"
            ;;
          Windows)
            echo "freckle/platform does not currently release for Windows" >&2
            exit 1
            ;;
          macOS)
            echo "::set-output name=suffix::x86_64-osx"
            ;;
        esac

        # Install cfn-flip if the PlatformCLI version requested is old
        case "$version" in
          v0* | v1* | v2.0*)
            echo "::set-output name=needs-cfn-flip::true"
            ;;
          *)
            echo "::set-output name=needs-cfn-flip::false"
            ;;
        esac

    - uses: robinraju/release-downloader@v1.3
      with:
        repository: freckle/platform
        latest: ${{ steps.prep.outputs.version == '' }}
        tag: ${{ steps.prep.outputs.version }}
        fileName: platform-${{ steps.prep.outputs.suffix }}.tar.gz
        token: ${{ inputs.token }}

    - shell: bash
      run: tar xzvf ./platform-${{ steps.prep.outputs.suffix }}.tar.gz

    - shell: bash
      if: ${{ runner.os == 'macOS' }}
      run: |
        echo "Replacing BSD install with GNU install"
        brew install coreutils
        ln -sf "$(which ginstall)" "$(which install)"

    - shell: bash
      run: cd ./platform && sudo make install

    - if: ${{ steps.prep.outputs.needs-cfn-flip == 'true' }}
      uses: actions/setup-python@v2

    - if: ${{ steps.prep.outputs.needs-cfn-flip == 'true' }}
      shell: bash
      run: pip install cfn-flip
