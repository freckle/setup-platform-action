name: Platform setup
description: Install Freckle Platform CLI
inputs:
  version:
    description: Version of Platform CLI to install
    required: true
    default: ""
  token:
    description: GitHub Token with access to freckle/platform repository
    required: true
outputs: {}
runs:
  using: composite
  steps:
    - id: prep
      name: Prepare for installation
      shell: bash
      run: |
        if [[ -f .platform/VERSION ]]; then
          read -r version < .platform/VERSION
        else
          version=${{ inputs.version }}
        fi

        {
          echo "version=$version"

          case "${{ runner.os }}" in
            Linux)
              echo "suffix=x86_64-linux"
              ;;
            Windows)
              echo "freckle/platform does not currently release for Windows" >&2
              exit 1
              ;;
            macOS)
              echo "suffix=x86_64-osx"
              ;;
          esac

          # Install cfn-flip if the PlatformCLI version requested is old
          case "$version" in
            v0* | v1* | v2.0*)
              echo "needs-cfn-flip=true"
              ;;
            *)
              echo "needs-cfn-flip=false"
              ;;
          esac
        } >>"$GITHUB_OUTPUT"

    - name: Install coreutils on OSX
      shell: bash
      if: ${{ runner.os == 'macOS' }}
      run: brew install coreutils

    - name: Install PlatformCLI
      shell: bash
      run: |
        if [[ -n "$PLATFORM_VERSION" ]]; then
          gh release --repo freckle/platform download "$PLATFORM_VERSION" \
            --pattern "$PLATFORM_ASSET"
        else
          gh release --repo freckle/platform download \
            --pattern "$PLATFORM_ASSET"
        fi

        tar xzvf "$PLATFORM_ASSET"
        cd ./platform && sudo make install
      env:
        GH_TOKEN: ${{ inputs.token }}
        PLATFORM_ASSET: platform-${{ steps.prep.outputs.suffix }}.tar.gz
        PLATFORM_VERSION: ${{ steps.prep.outputs.version }}

    - name: Setup for cfn-flip
      if: ${{ steps.prep.outputs.needs-cfn-flip == 'true' }}
      uses: actions/setup-python@v2

    - name: Install cfn-flip
      if: ${{ steps.prep.outputs.needs-cfn-flip == 'true' }}
      shell: bash
      run: pip install cfn-flip
