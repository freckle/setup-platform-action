#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<EOM
Usage: install [-v RELEASE] [-s SUFFIX] [-p PREFIX] [-Sh]
Install Platform CLI and supporting tools

Options:
  -v RELEASE    Release tag to get artifacts from (default: latest)
  -s SUFFIX     Artifact suffix to search for (default: x86_64-linux)
  -p PREFIX     Install tools and CLI into PREFIX (default: empty)
  -S            Use sudo for installation commands

EOM
}

check_bin() {
  local bin=$1

  if ! command -v "$bin" &>/dev/null; then
    echo "$bin not available on $PATH" >&2
    return 1
  fi

  return 0
}

version=latest
suffix=x86_64-linux
prefix=
sudo_cmd=

while getopts v:s:p:Sh opt; do
  case "$opt" in
    v)
      version=$OPTARG
      ;;
    s)
      suffix=$OPTARG
      ;;
    p)
      prefix=$OPTARG
      ;;
    S)
      sudo_cmd=sudo
      ;;
    h)
      usage
      exit 0
      ;;
    \?)
      usage >&2
      exit 64
      ;;
  esac
done
shift $((OPTIND - 1))

check_bin aws
check_bin curl
check_bin jq
check_bin pip
check_bin unzip

# Store current directory
bin=$(cd "$(dirname "$0")" && pwd)

# Do all work in a temporary directory
tmp=$(mktemp -d)
trap 'rm -rf "$tmp"' EXIT
cd "$tmp"

if ! check_bin cfn-flip; then
  # Always a user-installation
  pip install cfn-flip
fi

GITHUB_TOKEN=$(
  aws ssm get-parameter \
    --name /github/setup-platform-token \
    --query 'Parameter.Value' \
    --output text
)
export GITHUB_TOKEN

echo "Installing version=$version, archive=platform-$suffix.tar.gz"

"$bin"/ghrd "$version" "platform-$suffix.tar.gz" freckle/platform
tar xzvf ./"platform-$suffix.tar.gz"
cd ./platform && $sudo_cmd make install "PREFIX=$prefix"
